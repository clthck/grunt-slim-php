#!/usr/bin/env php
<?php

require dirname(__FILE__) . '/../vendor/autoload.php';

use clthck\SlimPHP\SlimPHP;
use clthck\SlimPHP\Parser;
use clthck\SlimPHP\Lexer\Lexer;
use clthck\SlimPHP\Dumper\PHPDumper;
use clthck\SlimPHP\Visitor\AutotagsVisitor;

use clthck\SlimPHP\Filter\JavaScriptFilter;
use clthck\SlimPHP\Filter\CDATAFilter;
use clthck\SlimPHP\Filter\PHPFilter;
use clthck\SlimPHP\Filter\CSSFilter;

function usage() {
  global $argv;

  fwrite(STDERR, "Usage: $argv[0] [-t target] <inputFile> [outputFile]\n");
  exit(1);
}

function main($args) {
  array_shift($args);

  $opts = getopt('t');

  if (isset($opts['t'])) {
    $target = $opts['t'];
    $args = array_slice($args, 2);
  } else {
    $target = 'php';
  }

  if (count($args) < 1 || count($args) > 2)
    usage();

  $dumper = new PHPDumper();
  $dumper->registerVisitor('tag', new AutotagsVisitor());
  $dumper->registerFilter('javascript', new JavaScriptFilter());
  $dumper->registerFilter('cdata', new CDATAFilter());
  $dumper->registerFilter('php', new PHPFilter());
  $dumper->registerFilter('style', new CSSFilter());

  // Initialize parser & SlimPHP
  $parser = new Parser(new Lexer());
  $slim   = new SlimPHP($parser, $dumper);

  // $parser->setAutotag('input:progress', 'input', array('type'=>'text', 'class'=>'progress-bar'));

  $input = @file_get_contents($args[0]);
  if ($input === false) {
    fwrite(STDERR, "Unable to open $args[0]\n");
    exit(1);
  }

  try {
    // Parse a template (both string & file containers)
    $output = $slim->render($input);
  } catch (Exception $e) {
    fwrite(STDERR, $e->getMessage() . "\n");
    exit(1);
  }

  if (count($args) == 2) {
    file_put_contents($args[1], $output);
  } else {
    echo $output;
  }
}

main($argv);

# vim: ft=php
